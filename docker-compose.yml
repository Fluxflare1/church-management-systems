version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./staticfiles:/static
      - ./media:/media
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  backend:
  build:
    context: ./apps/backend
    dockerfile: Dockerfile
  ports:
    - "8000:8000"
  volumes:
    - ./apps/backend:/app
    - ./media:/app/media
    - ./staticfiles:/app/staticfiles
  # Add this for Windows
  environment:
    - PYTHONUNBUFFERED=1
    - DJANGO_SETTINGS_MODULE=core.settings.development
    depends_on:
      - db
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    restart: unless-stopped

  celery:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    command: celery -A core worker -l info
    volumes:
      - ./apps/backend:/app
    environment:
      - DATABASE_URL=postgresql://thogmi_dev:password@db:5432/thogmi_platform
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery-beat:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    command: celery -A core beat -l info
    volumes:
      - ./apps/backend:/app
    environment:
      - DATABASE_URL=postgresql://thogmi_dev:password@db:5432/thogmi_platform
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=thogmi_platform
      - POSTGRES_USER=thogmi_dev
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
